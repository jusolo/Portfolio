---
interface Props {
  title: string;
  body?: string;
  tags: Array<string>;
  path?: string;
  link?: string;
}

const { title, tags, body, path, link } = Astro.props;
---

<div
  class="w-24 min-w-full max-w-screen-sm h-auto min-h-full max-h-full p-6 bg-white border border-gray-200 rounded-lg shadow flex flex-col gap-3 place-items-center dark:bg-gray-800 dark:border-gray-700"
>
  {
    path && (
      <a href="#">
        <img class="rounded-t-lg h-60 w-auto lg:h-20" src={path} alt="" />
      </a>
    )
  }
  <div class="p-5 flex flex-col gap-6 place-content-between">
    <div>
      <h5
        class="h-20 text-2xl font-bold tracking-tight text-gray-900 text-left lg:text-sm lg:h-10 dark:text-white"
      >
        {title}
      </h5>
      {
        body && (
          <p class="w-auto h-60 font-normal text-left text-xl text-gray-700 text-ellipsis overflow-hidden lg:text-sm lg:h-40 lg:mb-3 dark:text-gray-400">
            {body}
          </p>
        )
      }
    </div>

    <div
      class="h-20 font-normal text-left text-gray-700 grid grid-cols-3 auto-rows-auto gap-3 lg:gap-1 dark:text-gray-400"
    >
      {
        tags.map((tag) => (
          <div class="h-10 w-auto bg-gray-100 text-gray-800 text-xl font-medium me-2 px-2.5 py-0.5 rounded lg:text-xs lg:h-6 dark:bg-gray-700 dark:text-gray-300">
            {tag}
          </div>
        ))
      }
    </div>
    {
      link && (
        <a
          href={link}
          target="_blank"
          class="inline-flex items-center px-3 py-2 text-sm font-medium text-center text-white bg-blue-700 rounded-lg hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800"
        >
          visit website
          <svg
            class="rtl:rotate-180 w-3.5 h-3.5 ms-2"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 14 10"
          >
            <path
              stroke="currentColor"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M1 5h12m0 0L9 1m4 4L9 9"
            />
          </svg>
        </a>
      )
    }
  </div>
</div>

<!-- <div
  class="w-24 min-w-full max-w-screen-sm h-auto min-h-full max-h-full p-6 bg-white border border-gray-200 rounded-lg shadow flex flex-col gap-3 place-items-center dark:bg-gray-800 dark:border-gray-700"
>
  <svg
    class="w-7 h-7 text-blue-500 dark:text-gray-400 mb-3"
    aria-hidden="true"
    xmlns="http://www.w3.org/2000/svg"
    fill="currentColor"
    viewBox="0 0 20 20"
  >
    <path d={path}></path>
  </svg>
  <h5
    class="mb-2 text-2xl font-bold tracking-tight text-gray-900 dark:text-white"
  >
    {title}
  </h5>
  <p
    class="mb-3 font-normal text-gray-700 flex flex-wrap gap-3 dark:text-gray-400"
  >
    {
      skills.map((skill) => (
        <span class="bg-gray-100 text-gray-800 text-xs font-medium me-2 px-2.5 py-0.5 rounded dark:bg-gray-700 dark:text-gray-300">
          {skill}
        </span>
      ))
    }
  </p>
</div> -->

<style></style>
